apiVersion: v1
kind: Service
metadata:
  name: cockroachdb
spec:
  ports:
    - port: 26257
      targetPort: 26257
      name: grpc
    - port: 8080
      targetPort: 8080
      name: http
  clusterIP: None
  selector:
    app: cockroachdb
---
apiVersion: v1
kind: Service
metadata:
  name: cockroachdb-public
spec:
  ports:
    - port: 26257
      targetPort: 26257
      name: grpc
  selector:
    app: cockroachdb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cockroachdb
spec:
  serviceName: "cockroachdb"
  replicas: 1
  selector:
    matchLabels:
      app: cockroachdb
  template:
    metadata:
      labels:
        app: cockroachdb
    spec:
      containers:
        - name: cockroachdb
          image: cockroachdb/cockroach:v25.2.2
          ports:
            - containerPort: 26257
              name: grpc
            - containerPort: 8080
              name: http
          command:
            - "/cockroach/cockroach"
            - "start"
            - "--insecure"
            - "--advertise-addr=$(POD_IP)"
            - "--http-addr=$(POD_IP):8080"
            - "--join=$(POD_IP):26257"
            - "--cache=.25"
            - "--max-sql-memory=.25"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          readinessProbe:
            exec:
              command:
                - "/cockroach/cockroach"
                - "node"
                - "status"
                - "--insecure"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: datadir
              mountPath: /cockroach/cockroach-data
      volumes:
        - name: datadir
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi